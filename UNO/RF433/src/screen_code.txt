//----------------------------------------------------------------------
//EASTRISING TECHNOLOGY CO,.LTD.//
// Module    : ER-OLED0.50-1  0.5"   88*48
// Lanuage   : C51 Code
// Create    : JAVEN
// Date      : 2020-04-08
// Drive IC  : Sh1115
// INTERFACE : 4 wire SPI
// MCU 		 : STC89LE52
// VDD		 : 3.3V   VBAT: 3.6V    
//----------------------------------------------------------------------


#include <AT89X52.H>
#include <intrins.h>

#define uint unsigned int
#define uchar unsigned char
#define SDA                  P1_1
#define SCL                  P1_0
#define RST                  P3_4
sbit	int0=P3^2;
sbit key_add=P0^1;
sbit key_dec=P0^2;
uchar Contrast_level=0x8f;
bit log=0;

#define Write_Address 0x78/*slave addresses with write*/
#define Read_Address 0x79/*slave addresses with read*/

#define Start_column	0x00
#define Start_page		0x00
#define	StartLine_set	0x00

void Delay1(uint n);
void Write_number(uchar code *n,uchar k,uchar station_dot);
void display_Contrast_level(uchar number);
void adj_Contrast(void);
void Delay(uint n);
void SentByte(unsigned char dat);
void SentByte(unsigned char cmd);
void Set_Page_Address(unsigned char add);
void Set_Column_Address(unsigned char add);
void Set_Contrast_Control_Register(unsigned char mod);
void Initial(void);
void Display_Chess(unsigned char value);
void Display_Chinese(unsigned char ft[]);
void Display_Chinese_Column(unsigned char ft[]);
void Display_Picture(unsigned char pic[]);
void SentByte(unsigned char Byte);
void Check_Ack(void);//Acknowledge
void Stop(void);
void Start(void);
void Send_ACK(void);
unsigned char ReceiveByte(void);

uchar code	    num[]={0x00,0xF8,0xFC,0x04,0x04,0xFC,0xF8,0x00,0x00,0x03,0x07,0x04,0x04,0x07,0x03,0x00,  	   /*--  ÎÄ×Ö:  0~9  --*/
0x00,0x00,0x08,0xFC,0xFC,0x00,0x00,0x00,0x00,0x00,0x04,0x07,0x07,0x04,0x00,0x00,  
0x00,0x18,0x1C,0x84,0xC4,0x7C,0x38,0x00,0x00,0x06,0x07,0x05,0x04,0x04,0x04,0x00,
0x00,0x08,0x0C,0x24,0x24,0xFC,0xD8,0x00,0x00,0x02,0x06,0x04,0x04,0x07,0x03,0x00,
0x80,0xE0,0x70,0x18,0xFC,0xFC,0x00,0x00,0x00,0x01,0x01,0x05,0x07,0x07,0x04,0x00,
0x00,0x7C,0x7C,0x24,0x24,0xE4,0xC4,0x00,0x00,0x03,0x07,0x04,0x04,0x07,0x03,0x00,
0x00,0xF0,0xF8,0x6C,0x24,0xEC,0xCC,0x00,0x00,0x03,0x07,0x04,0x04,0x07,0x03,0x00,
0x00,0x0C,0x0C,0xC4,0xFC,0x3C,0x04,0x00,0x00,0x00,0x00,0x07,0x07,0x00,0x00,0x00,
0x00,0x98,0xFC,0x64,0x64,0xFC,0x98,0x00,0x00,0x03,0x07,0x04,0x04,0x07,0x03,0x00,
0x00,0x78,0xFC,0x84,0xC4,0xFC,0xF8,0x00,0x00,0x06,0x06,0x04,0x06,0x03,0x01,0x00};



unsigned char code font[]=
{

/*--  ÎÄ×Ö:  Éî  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x10,0x61,0x06,0xE0,0x00,0x26,0x22,0x1A,0x02,0xC2,0x0A,0x12,0x32,0x06,0x02,0x00,
0x04,0xFC,0x03,0x20,0x20,0x11,0x11,0x09,0x05,0xFF,0x05,0x09,0x19,0x31,0x10,0x00,

/*--  ÎÄ×Ö:  ÛÚ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x10,0x10,0x10,0xFE,0x10,0x10,0xFE,0x00,0x00,0xFC,0x00,0x00,0x00,0xFE,0x00,0x00,
0x08,0x08,0x04,0x47,0x24,0x18,0x07,0x00,0x00,0x1F,0x00,0x00,0x00,0x7F,0x00,0x00,

/*--  ÎÄ×Ö:  Ðñ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x10,0x10,0x10,0xFF,0x10,0xF0,0x00,0x00,0xFE,0x22,0x22,0x22,0x22,0xFE,0x00,0x00,
0x40,0x30,0x0E,0x01,0x00,0x3F,0x40,0x40,0x47,0x44,0x44,0x44,0x44,0x47,0x70,0x00,

/*--  ÎÄ×Ö:  ÈÕ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x00,0x00,0xFE,0x42,0x42,0x42,0x42,0x42,0x42,0x42,0xFE,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x3F,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x3F,0x00,0x00,0x00,0x00,

/*--  ÎÄ×Ö:  ¶«  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x04,0x04,0xC4,0xB4,0x8C,0x87,0x84,0xF4,0x84,0x84,0x84,0x84,0x04,0x00,0x00,
0x00,0x00,0x20,0x18,0x0E,0x04,0x20,0x40,0xFF,0x00,0x02,0x04,0x18,0x30,0x00,0x00,

/*--  ÎÄ×Ö:  ·œ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x08,0x08,0x08,0x08,0x08,0x08,0xF9,0x4A,0x4C,0x48,0x48,0xC8,0x08,0x08,0x08,0x00,
0x40,0x40,0x20,0x10,0x0C,0x03,0x00,0x00,0x20,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,

/*--  ÎÄ×Ö:  ¿Æ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x10,0x12,0x92,0x72,0xFE,0x51,0x91,0x00,0x22,0xCC,0x00,0x00,0xFF,0x00,0x00,0x00,
0x04,0x02,0x01,0x00,0xFF,0x00,0x04,0x04,0x04,0x02,0x02,0x02,0xFF,0x01,0x01,0x00,

/*--  ÎÄ×Ö:  ŒŒ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x08,0x08,0x88,0xFF,0x48,0x28,0x00,0xC8,0x48,0x48,0x7F,0x48,0xC8,0x48,0x08,0x00,
0x01,0x41,0x80,0x7F,0x00,0x40,0x40,0x20,0x13,0x0C,0x0C,0x12,0x21,0x60,0x20,0x00,

/*--  ÎÄ×Ö:  ³É  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x00,0xF8,0x48,0x48,0x48,0xC8,0x08,0xFF,0x08,0x09,0x0A,0xC8,0x88,0x08,0x00,
0x40,0x30,0x0F,0x00,0x08,0x50,0x4F,0x20,0x10,0x0B,0x0C,0x12,0x21,0x40,0xF0,0x00,

/*--  ÎÄ×Ö:  Á¢  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x10,0x10,0x90,0x10,0x10,0x11,0x16,0x10,0x10,0xF0,0x50,0x10,0x10,0x00,0x00,
0x40,0x40,0x40,0x40,0x43,0x4E,0x40,0x60,0x58,0x47,0x40,0x40,0x40,0x60,0x40,0x00,

/*--  ÎÄ×Ö:  ÓÚ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x40,0x40,0x42,0x42,0x42,0x42,0x42,0xFE,0x42,0x42,0x42,0x42,0x42,0x42,0x40,0x00,
0x00,0x00,0x00,0x00,0x20,0x40,0x80,0x7F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

/*--  ÎÄ×Ö:  ¶þ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x06,0x04,0x00,0x00,0x00,
0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x18,0x10,0x00,

/*--  ÎÄ×Ö:  Áã  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x0C,0x04,0x55,0x55,0x55,0x85,0x7F,0x85,0x55,0x55,0x55,0x05,0x0C,0x04,0x00,
0x04,0x04,0x04,0x0A,0x0A,0x09,0x2A,0xCC,0x28,0x19,0x09,0x02,0x06,0x02,0x02,0x00,

/*--  ÎÄ×Ö:  Áã  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x0C,0x04,0x55,0x55,0x55,0x85,0x7F,0x85,0x55,0x55,0x55,0x05,0x0C,0x04,0x00,
0x04,0x04,0x04,0x0A,0x0A,0x09,0x2A,0xCC,0x28,0x19,0x09,0x02,0x06,0x02,0x02,0x00,

/*--  ÎÄ×Ö:  ¶þ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x06,0x04,0x00,0x00,0x00,
0x00,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x10,0x18,0x10,0x00,

/*--  ÎÄ×Ö:  Äê  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x40,0x20,0x10,0x0C,0xE3,0x22,0x22,0x22,0xFE,0x22,0x22,0x22,0x22,0x02,0x00,0x00,
0x04,0x04,0x04,0x04,0x07,0x04,0x04,0x04,0xFF,0x04,0x04,0x04,0x04,0x04,0x04,0x00,

/*--  ÎÄ×Ö:  ÆÚ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x04,0xFF,0x54,0x54,0x54,0xFF,0x04,0x00,0xFE,0x22,0x22,0x22,0xFE,0x00,0x00,
0x42,0x22,0x1B,0x02,0x02,0x0A,0x33,0x62,0x18,0x07,0x02,0x22,0x42,0x3F,0x00,0x00,

/*--  ÎÄ×Ö:  Žý  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x20,0x10,0x08,0xC7,0x3A,0x50,0x44,0x44,0x44,0x7F,0x44,0xC4,0x44,0x44,0x40,0x00,
0x00,0x02,0x01,0xFF,0x00,0x02,0x02,0x1A,0x02,0x42,0x82,0x7F,0x02,0x02,0x02,0x00,

/*--  ÎÄ×Ö:  ×Å  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x44,0x54,0x54,0x55,0x56,0xD4,0x7C,0x54,0x54,0x56,0x55,0x54,0x44,0x44,0x00,
0x08,0x08,0x04,0x04,0x02,0xFF,0x55,0x55,0x55,0x55,0x55,0x55,0xFF,0x00,0x00,0x00,

/*--  ÎÄ×Ö:  Äú  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x80,0x40,0x30,0xFC,0x03,0x90,0x68,0x06,0x04,0xF4,0x04,0x24,0x44,0x8C,0x04,0x00,
0x00,0x20,0x38,0x03,0x38,0x40,0x40,0x49,0x52,0x41,0x40,0x70,0x00,0x09,0x30,0x00,

/*--  ÎÄ×Ö:  ÀŽ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x80,0x84,0x84,0x94,0xA4,0xC4,0xFF,0x84,0xC4,0xB4,0x94,0x84,0x84,0x80,0x00,
0x20,0x20,0x10,0x10,0x08,0x04,0x02,0xFF,0x01,0x02,0x04,0x08,0x18,0x30,0x10,0x00,

/*--  ÎÄ×Ö:  µç  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x00,0xF8,0x48,0x48,0x48,0x48,0xFF,0x48,0x48,0x48,0x48,0xF8,0x00,0x00,0x00,
0x00,0x00,0x0F,0x04,0x04,0x04,0x04,0x3F,0x44,0x44,0x44,0x44,0x4F,0x40,0x70,0x00,

/*--  ÎÄ×Ö:  ÀŽ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x80,0x84,0x84,0x94,0xA4,0xC4,0xFF,0x84,0xC4,0xB4,0x94,0x84,0x84,0x80,0x00,
0x20,0x20,0x10,0x10,0x08,0x04,0x02,0xFF,0x01,0x02,0x04,0x08,0x18,0x30,0x10,0x00,

/*--  ÎÄ×Ö:  º¯  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0xE0,0x02,0x12,0xE2,0x42,0x02,0xF2,0x12,0x8A,0x66,0x47,0x02,0xE0,0x00,0x00,
0x00,0x7F,0x20,0x24,0x24,0x2A,0x31,0x2F,0x21,0x22,0x24,0x2C,0x20,0x7F,0x00,0x00,

/*--  ÎÄ×Ö:  ÎÒ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x20,0x20,0x22,0x22,0xFE,0x21,0x21,0x20,0x20,0xFF,0x20,0x22,0xAC,0x20,0x20,0x00,
0x04,0x04,0x42,0x82,0x7F,0x01,0x01,0x10,0x10,0x08,0x07,0x1A,0x21,0x40,0xF0,0x00,

/*--  ÎÄ×Ö:  ÃÇ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x80,0x40,0xF0,0x1C,0x03,0xF0,0x01,0x0E,0x04,0x00,0x04,0x04,0x04,0xFC,0x00,0x00,
0x00,0x00,0x7F,0x00,0x00,0x7F,0x00,0x00,0x00,0x00,0x00,0x20,0x40,0x3F,0x00,0x00,

/*--  ÎÄ×Ö:  Õæ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x04,0x04,0x04,0xF4,0x54,0x5C,0x57,0x54,0x54,0x54,0xF4,0x04,0x06,0x04,0x00,
0x10,0x90,0x90,0x50,0x5F,0x35,0x15,0x15,0x15,0x35,0x55,0x5F,0x90,0x90,0x10,0x00,

/*--  ÎÄ×Ö:  ³Ï  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x20,0x21,0xE6,0x02,0x08,0xF8,0x88,0x88,0x88,0x08,0xFF,0x08,0x0A,0xCC,0x88,0x00,
0x00,0x00,0x3F,0x90,0x68,0x1F,0x20,0x40,0x3F,0x20,0x10,0x0F,0x14,0x23,0x78,0x00,

/*--  ÎÄ×Ö:  Îª  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x10,0x10,0x12,0x14,0x1C,0x10,0xF0,0x9F,0x10,0x10,0x10,0x10,0xF8,0x10,0x00,
0x00,0x00,0x40,0x20,0x10,0x08,0x06,0x01,0x00,0x11,0x26,0x40,0x20,0x1F,0x00,0x00,

/*--  ÎÄ×Ö:  Äú  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x80,0x40,0x30,0xFC,0x03,0x90,0x68,0x06,0x04,0xF4,0x04,0x24,0x44,0x8C,0x04,0x00,
0x00,0x20,0x38,0x03,0x38,0x40,0x40,0x49,0x52,0x41,0x40,0x70,0x00,0x09,0x30,0x00,

/*--  ÎÄ×Ö:  ·þ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x00,0x00,0xFF,0x91,0x91,0xFF,0x00,0x00,0xFF,0xC1,0x41,0x49,0x51,0xCF,0x00,0x00,
0x40,0x30,0x0F,0x20,0x40,0x3F,0x00,0x00,0x7F,0x21,0x16,0x08,0x36,0x61,0x20,0x00,

/*--  ÎÄ×Ö:  Îñ  --*/
/*--  ËÎÌå12;  ŽË×ÖÌåÏÂ¶ÔÓŠµÄµãÕóÎª£º¿íxžß=16x16   --*/
0x20,0x10,0x10,0x88,0x84,0x4F,0x52,0xA2,0x22,0x52,0x4A,0x86,0x80,0x80,0x80,0x00,
0x80,0x81,0x41,0x42,0x22,0x12,0x0E,0x03,0x02,0x42,0x82,0x7E,0x00,0x01,0x00,0x00

};



unsigned char code pic[]=
{

0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xF0,0x10,
0x10,0x10,0x10,0x00,0x80,0x40,0x40,0x40,0xC0,0x80,0x00,0x80,0xC0,0x40,0x40,0xC0,
0x80,0x40,0xE0,0xF0,0x40,0x00,0xF0,0xF0,0x10,0x10,0x10,0xF0,0xE0,0x00,0xD0,0xD0,
0x00,0x80,0xC0,0x40,0x40,0xC0,0x80,0x00,0xD0,0xD0,0x00,0xC0,0xC0,0x80,0x40,0xC0,
0x80,0x00,0x80,0xC0,0x40,0x80,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x1F,0x1F,0x11,0x11,0x11,0x11,0x00,0x0C,0x1E,0x13,0x11,
0x1F,0x1F,0x00,0x09,0x1B,0x13,0x16,0x1E,0x0C,0x00,0x0F,0x1F,0x10,0x00,0x1F,0x1F,
0x01,0x01,0x03,0x0F,0x1C,0x10,0x1F,0x1F,0x00,0x09,0x1B,0x13,0x16,0x1E,0x0C,0x00,
0x1F,0x1F,0x00,0x1F,0x1F,0x00,0x00,0x1F,0x1F,0x00,0x2F,0x5F,0x50,0x48,0x7F,0x3F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xF8,0xF8,0x88,0x88,0x88,0x00,0x00,0xF8,0xF8,0x88,0x88,0xF8,
0x70,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xF8,0x08,0x08,0xF8,0xF0,0x00,0x00,0xF8,
0xF8,0x00,0x00,0x00,0x00,0x00,0xF8,0xF8,0x88,0x88,0x88,0x00,0x00,0xF8,0xF8,0x08,
0x08,0xF8,0xF0,0x00,0xF0,0xF8,0x08,0xF8,0xF0,0x00,0x00,0x00,0x00,0xE0,0x78,0x58,
0xC8,0x88,0x00,0xF0,0xF8,0x08,0xF8,0xF0,0x00,0x00,0x00,0x00,0x00,0x60,0x30,0xF8,
0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x08,0x08,
0x08,0x00,0x00,0x0F,0x0F,0x00,0x03,0x07,0x0E,0x08,0x02,0x02,0x02,0x02,0x00,0x07,
0x0F,0x08,0x08,0x0F,0x07,0x00,0x00,0x0F,0x0F,0x08,0x08,0x08,0x00,0x00,0x0F,0x0F,
0x08,0x08,0x08,0x00,0x00,0x0F,0x0F,0x08,0x08,0x0F,0x07,0x00,0x07,0x0F,0x08,0x0F,
0x07,0x00,0x08,0x08,0x00,0x04,0x0C,0x08,0x0F,0x07,0x00,0x07,0x0F,0x08,0x0F,0x07,
0x00,0x02,0x02,0x02,0x02,0x00,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0xFC,0xFC,0x10,0x10,0xF0,0xE0,0x00,0xF0,0xF0,0x00,0x00,0xF0,0xF0,
0x00,0x70,0xF0,0x00,0xF0,0x70,0x00,0xE0,0xF0,0x10,0x10,0xFC,0xFC,0x00,0xF6,0xF6,
0x00,0xE0,0xF0,0x90,0xB0,0xA0,0x00,0xF0,0xF0,0x10,0x10,0xF0,0xE0,0x00,0xFC,0xFC,
0x00,0x20,0xB0,0x90,0xF0,0xE0,0x00,0x70,0xF0,0x00,0xF0,0x70,0x00,0x00,0x00,0x00,
0xE0,0xF0,0x10,0x30,0x20,0x00,0xE0,0xF0,0x10,0x10,0xF0,0xE0,0x00,0xF0,0xF0,0x10,
0xF0,0xE0,0x10,0xF0,0xF0,0x00,0x00,0x00,0xC0,0x80,0x00,0x07,0x07,0x04,0x04,0x07,
0x03,0x00,0x03,0x07,0x04,0x04,0x07,0x07,0x00,0x20,0x37,0x1E,0x07,0x00,0x00,0x03,
0x07,0x04,0x04,0x07,0x07,0x00,0x07,0x07,0x00,0x02,0x06,0x04,0x07,0x03,0x00,0x3F,
0x3F,0x04,0x04,0x07,0x03,0x00,0x07,0x07,0x00,0x03,0x07,0x04,0x07,0x07,0x00,0x20,
0x37,0x1E,0x07,0x00,0x00,0x04,0x04,0x00,0x03,0x07,0x04,0x06,0x02,0x00,0x03,0x07,
0x04,0x04,0x07,0x03,0x00,0x07,0x07,0x00,0x07,0x07,0x00,0x07,0x07,0x00,0x80,0xC0,


};



unsigned char code pic1[]=
{
0xFF,0xFE,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xE0,0xF0,0xF8,0xFC,0xFC,
0xFE,0xFE,0xFC,0xF8,0xF0,0xF0,0x58,0x08,0x0C,0x0E,0x0E,0x06,0x04,0x0C,0x0C,0x0C,
0x04,0x04,0x1C,0xFC,0xEC,0xC0,0x80,0x00,0x80,0x80,0xC0,0xC0,0xC0,0xC0,0x80,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0xF8,0xFC,0xFE,0xFE,0xFF,0xFF,0xBF,0xFF,0xFE,0xC3,
0xC3,0xC1,0xC3,0xC3,0xC6,0xC6,0x86,0xC6,0x3D,0x39,0x7F,0xF8,0x80,0x00,0x00,0x00,
0x00,0x00,0x03,0x0F,0x9F,0x7F,0x1F,0x0F,0x7F,0x7F,0xFF,0xFF,0xFB,0xFB,0xFB,0xF6,
0xEE,0x7C,0x18,0x18,0x78,0xFC,0xFC,0xFC,0xFC,0xF4,0xF6,0xF7,0xFD,0xFD,0xF9,0x07,
0x1F,0x3F,0xFF,0xFF,0xFF,0xFF,0x7F,0x1E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xC0,0x40,0xE0,0xF0,0x3C,0x1E,0x9B,0xD9,
0xD9,0x3B,0x03,0x03,0x03,0x03,0x81,0xC7,0x4F,0x7F,0x7F,0xFF,0xFE,0xFE,0x9E,0x1E,
0x00,0x00,0xC0,0x61,0x3F,0x7C,0xE8,0xC8,0xC8,0xF8,0x3C,0xEF,0xF1,0xF8,0xFC,0xFC,
0xFE,0xDE,0x6F,0x2F,0xFF,0xFF,0x3D,0x00,0x00,0x00,0x00,0xE0,0xF8,0xF8,0xBD,0x3D,
0xFD,0xFB,0xFB,0xF1,0xF1,0xE1,0x00,0x00,0x00,0x00,0xFF,0x7C,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFC,0x06,0x03,0x61,
0xC0,0x00,0x03,0x07,0x04,0x9A,0x1B,0x1B,0x10,0x00,0x00,0x00,0x3C,0x7E,0xCF,0xC7,
0xC0,0xE0,0xF0,0xFF,0xFF,0x7F,0x3F,0x00,0x00,0x00,0x03,0x0E,0x1C,0x18,0x11,0x3B,
0x7F,0xFF,0x60,0xC3,0x87,0x0F,0x0F,0x0F,0x0F,0x8E,0x86,0x8F,0x9C,0x8C,0x80,0x80,
0x00,0x00,0x00,0x01,0x0C,0x0C,0x1D,0x1C,0x3F,0x3F,0x3F,0x1F,0x1F,0x0F,0x01,0x00,
0xC0,0xE0,0x7F,0x1F,0x00,0x00,0x00,0x00,0x00,0xC0,0xE0,0xF0,0xF8,0xFC,0xFE,0xFC,
0xF8,0xE0,0xE0,0xE1,0xC7,0xDC,0xB0,0xE0,0x80,0x01,0x03,0x03,0x01,0x01,0x07,0x0C,
0x18,0x30,0x20,0x60,0x40,0x40,0x40,0x40,0x41,0x41,0x61,0x20,0x30,0x10,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x03,0x0F,0x3C,0xF1,0xC3,0x06,0xE4,
0xFC,0x78,0x39,0x11,0x11,0x11,0x31,0x30,0x30,0x20,0x20,0x20,0x30,0xF0,0xF0,0x70,
0x30,0x70,0xF8,0xF8,0xFC,0xE6,0x06,0x03,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0xC0,0xF1,0xFF,0x7F,0xDF,0x87,0xC3,0x7E,0x9E,0xE1,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xFE,0xFE,0xFC,0xF8,0xF8,0xF8,0xF0,0xF0,0xF0,0xF0,0xF0,0xF0,0xE0,
0xF0,0xF0,0xF0,0xF0,0x10,0x18,0x18,0x08,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0xFB,0x3F,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x0C,0x38,0xE0,0x40,0x01,0x03,0x0F,0x38,0xF0,
0x40,0x00,0x00,0x00,0x00,0x00,0x07,0x07,0x0F,0x1F,0x3F,0x3F,0x7E,0x7E,0x7E,0xFF,
0xFF,0xE3,0xC9,0x88,0x9A,0xB1,0xC1,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x1F,0x1F,0x3F,
0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7F,0x07,0x00,0x00,0x00,0x00,

};

unsigned char code pic2[]=
{
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xE0,0xF0,
0xF8,0xFC,0xFE,0xFF,0x00,0x60,0xF0,0xE0,0xE0,0xE0,0xE0,0xC0,0xC0,0xC0,0xC0,0xC0,
0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x7F,0xFF,0xFF,0xFF,0xFF,0xF8,0x00,0x3F,0xFF,
0xFF,0xE1,0x01,0x01,0x01,0x03,0x03,0x03,0x03,0x07,0x07,0x07,0x0F,0x0F,0x1F,0x1F,
0x1E,0x3E,0x3E,0xFE,0xFE,0xFC,0xFC,0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x03,0x0F,0x3E,0xFE,0xFE,0xFC,0x3C,0x7C,0x78,0x78,0xF0,0xF0,0xF0,0xE0,0xE0,
0xC3,0x3F,0xFF,0xFF,0xFF,0xE0,0x00,0x1F,0xFF,0xFF,0xE0,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xF0,0xFF,0xFF,0x7F,0x03,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x07,0x1F,0x7E,
0xF0,0x80,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x00,0x01,0x0F,0xFF,0xFF,0xC0,0x00,
0x0F,0xFF,0xFF,0xF8,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,
0x80,0xFE,0xFF,0x7F,0x07,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0xE0,0x20,0x20,0x20,0x21,0x87,0x80,0x80,0x80,0x00,0x00,0x80,
0x80,0x80,0x80,0xC0,0x80,0x07,0x0F,0xE0,0x20,0x23,0x23,0xC3,0x03,0xA3,0x03,0x03,
0x83,0x83,0x83,0x03,0xA3,0x03,0x83,0x83,0x83,0x03,0x03,0x00,0x80,0x80,0x80,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x40,0x4F,0x49,0x49,0x49,
0x49,0x4C,0x4A,0x4A,0x4F,0x40,0x49,0x4A,0x4A,0x44,0x40,0x4F,0x48,0x40,0x40,0x4F,
0x41,0x41,0x43,0x4C,0x40,0x4F,0x40,0x49,0x4A,0x4A,0x44,0x40,0x4F,0x40,0x4F,0x40,
0x40,0x4F,0x40,0x57,0x68,0x68,0x5F,0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,

};


unsigned char code pic3[]=
{
0x00,0x00,0x00,0x00,0x80,0xF0,0xFC,0xFF,0x7F,0x0F,0x07,0x21,0xF4,0x00,0x00,0x80,
0x80,0x80,0xC0,0xC0,0xC0,0x80,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0xC0,0x60,0x18,0x8E,0x63,0xB0,0x5C,0xD7,0xFD,0xFF,0x7F,0x6F,0xB7,0xED,
0x37,0xBF,0xB7,0xF2,0xFC,0xFF,0xBF,0xBF,0x37,0xAE,0x3F,0xEF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xFF,0xBF,0xD7,0xFE,0x7F,0xBF,0x7F,0x8D,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xF7,0xFC,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0xFF,0x3F,0xFF,0x03,
0x00,0x00,0xF0,0xFE,0xFF,0x3B,0x81,0xA1,0xD4,0xF4,0xF4,0x76,0xF6,0x74,0x7C,0xED,
0xF9,0xD2,0xB4,0x00,0x00,0x00,0x10,0x08,0x06,0x03,0x19,0x2C,0x17,0x09,0x14,0x1A,
0x0D,0x07,0x03,0x29,0x5D,0x4E,0xE7,0x6A,0x7B,0xBD,0x7F,0x1F,0x1D,0x1D,0xDD,0xFD,
0xFD,0xFD,0xFF,0xFF,0xFF,0xBF,0x7F,0xE7,0xC5,0xF2,0xBC,0x1E,0x4F,0x27,0x91,0xE3,
0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0x00,0x00,0x00,0x00,0x01,0x00,0x01,0x00,0x00,0x00,0x1F,0x3F,0x01,0x00,0x01,0x02,
0x01,0x03,0x07,0xC0,0x86,0x3C,0xF6,0xFF,0xFF,0x9F,0xBF,0xFE,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x80,0x85,0xBF,0xF2,0xD9,0xFF,0xFF,0xFF,0x8F,0xDF,0x7F,0x1F,0x84,0xD3,0xAD,
0x57,0xAB,0xD5,0xE9,0x31,0xCE,0xF7,0xFF,0x3F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
0xFF,0xFF,0xBF,0xDF,0xEF,0xFF,0xF7,0x73,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xDC,0x00,0x00,0x03,0x03,0x01,0x01,0x01,0x81,
0x41,0x31,0x1D,0x87,0xC0,0xA0,0x55,0xAA,0x54,0xA8,0x70,0x20,0x00,0x00,0x00,0x00,
0x00,0x20,0x30,0x10,0x18,0x30,0x50,0x28,0x19,0x11,0x01,0x08,0x00,0x00,0x01,0x01,
0x01,0x81,0x41,0xA1,0x51,0xAB,0x57,0xAB,0x55,0xAA,0x75,0xBE,0x5B,0x2D,0x86,0xF3,
0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBB,0xCD,0x56,0x49,0x75,0x9F,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,
0xF0,0x00,0x00,0x00,0x00,0x00,0x01,0x03,0x06,0x0C,0x0C,0x08,0x10,0x00,0x05,0x03,
0x03,0x03,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xA0,0x5C,0xAB,0x55,0xAA,0x55,0xAA,0x55,0xAA,
0x55,0xEA,0x65,0xB2,0xF9,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xBF,
0x5E,0x9F,0x48,0x2A,0x35,0xBA,0xC5,0xF2,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x08,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x04,0x0C,0x00,0x08,0x8C,0x8C,0x8C,0x8C,0x8C,0x88,0x08,0x08,
0x0C,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xB8,0x55,0xAA,
0x55,0xAA,0xD5,0x6A,0x35,0x1A,0x5D,0xFE,0xFF,0xBD,0xDE,0xFF,0xFF,0xFF,0xFF,0xBF,
0xFF,0xFF,0xDF,0xEF,0xFF,0xFF,0xFC,0xFE,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
};

unsigned char code pic4[]=
{
0x00,0x00,0xC0,0x00,0xE0,0x00,0xF0,0x00,0xFC,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0xF0,0x90,0x9C,0x04,0xF4,0x04,0xF4,0xF4,0x04,0xF4,0xF4,0x04,0x04,
0xFC,0x00,0x00,0xFC,0xFC,0x10,0x10,0xF0,0xE0,0x00,0xFC,0xFC,0x00,0xF0,0xF0,0x00,
0x00,0xF0,0xF0,0x00,0xE0,0xF0,0x50,0x50,0x70,0x60,0x10,0xF8,0xFC,0x10,0x00,0xE0,
0xF0,0x10,0x10,0xF0,0xE0,0x00,0xE0,0xF0,0x10,0x10,0xF0,0xE0,0x10,0xF8,0xFC,0x10,
0x00,0xFC,0xFC,0x10,0x10,0xF0,0xE0,0x00,0x03,0x00,0x03,0x80,0xC3,0xC0,0xC3,0xC0,
0xC3,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xC0,0xC0,0xC3,0x02,0x02,
0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x02,0x03,0x00,0x00,0x83,0x83,0xC2,0xC2,0xC3,
0xC1,0xC0,0x83,0x03,0x00,0x01,0x03,0x02,0x02,0x83,0xC3,0xC0,0xC1,0xC3,0xC2,0x82,
0x03,0x01,0x00,0x01,0x03,0x02,0x00,0x81,0x03,0x02,0x02,0x03,0x81,0x00,0x01,0x83,
0x02,0x02,0x03,0x81,0x00,0x01,0x03,0x82,0x00,0x03,0x03,0x80,0x80,0x83,0x03,0x00,
0x00,0x0E,0x0F,0x0F,0x03,0x01,0x81,0xC1,0xE3,0xFF,0x7F,0x1E,0x00,0x00,0x00,0x1C,
0x0E,0x0E,0x07,0xFF,0xFF,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x06,0x07,0x07,0x03,0x71,0x71,0x79,0xFF,0xDF,0xCF,0x80,0x00,0x00,0xFC,
0xFF,0xFF,0x03,0x01,0x01,0x01,0x03,0xFF,0xFF,0xFC,0x00,0x00,0x00,0x02,0x01,0xBF,
0x80,0x80,0x30,0x0E,0x01,0xB0,0x8F,0x88,0x0F,0x30,0x00,0x1F,0x20,0x20,0x20,0x1F,
0x00,0x00,0x1F,0x20,0x20,0x24,0x1D,0x00,0x00,0x60,0x78,0x7C,0x7E,0x7F,0x77,0x73,
0x71,0x70,0x70,0x70,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x7F,0x7F,0x7F,0x00,0x00,
0x00,0x00,0x00,0x70,0x70,0x70,0x00,0x00,0x00,0x00,0x0E,0x1E,0x3E,0x78,0x70,0x70,
0x70,0x78,0x3F,0x1F,0x0F,0x00,0x00,0x07,0x1F,0x3F,0x78,0x70,0x70,0x70,0x78,0x3F,
0x1F,0x07,0x00,0x00,0x00,0x00,0x00,0x7F,0x7F,0x07,0x3E,0x70,0x3E,0x07,0x7F,0x7F,
0x00,0x3C,0x7E,0x42,0x42,0x7E,0x3C,0x00,0x7E,0x7E,0x02,0x02,0x7E,0x7C,0x00,0x00,
0x00,0x00,0xF8,0xF8,0x20,0x20,0xE0,0xC0,0x00,0xE0,0xE0,0x00,0x00,0xE0,0xE0,0x00,
0xE0,0xE0,0x00,0xE0,0xE0,0x00,0xC0,0xE0,0x20,0x20,0xF8,0xF8,0x00,0xEC,0xEC,0x00,
0xC0,0xE0,0x20,0x60,0x40,0x00,0xE0,0xE0,0x20,0x20,0xE0,0xC0,0x00,0xF8,0xF8,0x00,
0x40,0x60,0x20,0xE0,0xC0,0x00,0xE0,0xE0,0x00,0xE0,0xE0,0x00,0x00,0x00,0x00,0xC0,
0xE0,0x20,0x60,0x40,0x00,0xC0,0xE0,0x20,0x20,0xE0,0xC0,0x00,0xE0,0xE0,0x20,0xE0,
0xC0,0x20,0xE0,0xE0,0x00,0x00,0x00,0x00,0x00,0x00,0x0F,0x0F,0x08,0x08,0x0F,0x07,
0x00,0x07,0x0F,0x08,0x08,0x0F,0x0F,0x00,0x40,0x6F,0x3C,0x0F,0x00,0x00,0x07,0x0F,
0x08,0x08,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x05,0x0D,0x09,0x0F,0x07,0x00,0x7F,0x7F,
0x08,0x08,0x0F,0x07,0x00,0x0F,0x0F,0x00,0x06,0x0F,0x09,0x0F,0x0F,0x00,0x40,0x6F,
0x3C,0x0F,0x00,0x00,0x08,0x08,0x00,0x07,0x0F,0x08,0x0C,0x04,0x00,0x07,0x0F,0x08,
0x08,0x0F,0x07,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x0F,0x0F,0x00,0x00,0x00,0x00,

};

void Step(void) interrupt 0 using 0
{
	Delay1(300);
	if(int0==0)
 // {	while(IE0);
	log=!log;
 // }
   while(!int0);
  return;

}




void Delay1(uint n)
{while(n--);
 
   
	return;
}


void Write_number(uchar code *n,uchar k,uchar station_dot)
{uchar i; 
		Start();
		SentByte(Write_Address);
		SentByte(0x40);
			for(i=0;i<8;i++)
				{
				SentByte(*(n+16*k+i));
				}
		Stop();	
			
	Set_Page_Address(Start_page+1)	;
    Set_Column_Address(Start_column+station_dot*8);
			Start();
			SentByte(Write_Address);
			SentByte(0x40);
			for(i=8;i<16;i++)
				{
				SentByte(*(n+16*k+i));
				}
			Stop();
}



void display_Contrast_level(uchar number)
{	uchar number1,number2,number3;
	number1=number/100;number2=number%100/10;number3=number%100%10;
	Set_Column_Address(Start_column+0*8);
	Set_Page_Address(Start_page);
    Write_number(num,number1,0);
	Set_Column_Address(Start_column+1*8);
	Set_Page_Address(Start_page);
	Write_number(num,number2,1);
	Set_Column_Address(Start_column+2*8);
	Set_Page_Address(Start_page);
	Write_number(num,number3,2);

}


void adj_Contrast(void)
{	Delay1(300);
 	 if((key_add==0)||(key_dec==0))
		{		
		 if	(key_add==0) 
			{Contrast_level+=1;
		   	Set_Contrast_Control_Register(Contrast_level);	
			display_Contrast_level(Contrast_level);
			Delay1(18000);
			if(key_add==0)
				{Delay1(18000);
					if(key_add==0)			
						{Delay1(18000);
							if(key_add==0)
								{Delay1(18000);
									if(key_add==0)

										{while(key_add==0)
											{Contrast_level+=1; 
		   										Set_Contrast_Control_Register(Contrast_level);	
												display_Contrast_level(Contrast_level);
							 					Delay1(20000); 
											}
										}
								}				
						}						
				}												
			}
	


		  
	
		 if	(key_dec==0) 
			{Contrast_level-=1; 
		   	Set_Contrast_Control_Register(Contrast_level);	
			display_Contrast_level(Contrast_level);
			Delay1(18000);
			if(key_dec==0)
				{Delay1(18000);
					if(key_dec==0)			
						{Delay1(18000);
							if(key_dec==0)
								{Delay1(18000);
									if(key_dec==0)

										{while(key_dec==0)
											{Contrast_level-=1; 
		   										Set_Contrast_Control_Register(Contrast_level);	
												display_Contrast_level(Contrast_level);
							 					Delay1(20000); 
											}
										}
								}				
						}						
				}												
			}

	  	}
}


void Delay(uint n)
{while(n)
 {    if((key_add==0)||(key_dec==0)) adj_Contrast();
	  n--;
 }
 	for(;log==1;)
	{
 	 if((key_add==0)||(key_dec==0)) adj_Contrast();
	}

	return;
}

void Start(void)
{	SDA=1;
	SCL=1;
    _nop_();
	SDA=0;
    _nop_();
	SCL=0;
}	


void Stop(void)
{
	SCL=0;
	SDA=0;
    _nop_();
	SCL=1;
    _nop_();
	SDA=1;
}	


void Check_Ack(void)//Acknowledge
{
    unsigned char ack=1;
	SDA=1;
    SCL=1;
    _nop_();
    while(ack==1){ack=SDA;}
    _nop_();
    SCL=0;
    return;
}


void SentByte(unsigned char Byte)
{
	uchar i;
	for(i=0;i<8;i++)
     {  SCL=0;
        if((Byte&0x80)==0x80) SDA=1;
       	else SDA=0;
       	SCL=1;
    	_nop_();		
        Byte=Byte<<1;
     }
	SCL=0;
	Check_Ack();
	
}

unsigned char ReceiveByte(void)
{uchar i,rudata=0;
	SCL=0;
	SDA=1;
	for(i=0;i<8;i++)
     {  SCL=1;
    	_nop_();	
		if (SDA==1)rudata|=0x01;
		else rudata|=0x00;
        rudata=rudata<<1;
		SCL=0;
    	_nop_();	
     }	
	Send_ACK();
	return rudata;
}

void Send_ACK(void)
{	SCL=0;
	SDA=0;
    _nop_();	
	SCL=1;
	SCL=0;
}


// Set page address 
void Set_Page_Address(unsigned char add)
{	Start();
	SentByte(Write_Address);
	SentByte(0x80);
    add=0xb0|add;
	SentByte(add);
    _nop_();
	return;
}

void Set_Column_Address(unsigned char add)
{
	Start();
	SentByte(Write_Address);
	SentByte(0x80);
	SentByte(0x10|(add>>4));
	SentByte(0x80);
	SentByte((0x0f&add));
 	Stop();
	return;
}



void Set_Contrast_Control_Register(unsigned char mod)
{
	Start();
	SentByte(Write_Address);
	SentByte(0x80);
	SentByte(0x81);
	SentByte(0x80);
	SentByte(mod);
 	Stop();
	return;
}


#pragma disable
void Initial(void)
{
	RST=1;
	Delay(2000);
	RST=0;
	Delay(2000);
	RST=1;

	Delay(2000);
	Start();
	SentByte(Write_Address);
	SentByte(0x80);	 //Control byte
	SentByte(0xae);  //--turn off oled panel
	SentByte(0x80);	 //Control byte
	SentByte(0x40); /*set display start line*/
 	SentByte(0x80);	 //Control byte
	SentByte(0xb0); /*set page address*/
	SentByte(0x80);	 //Control byte
	SentByte(0x81); /*contract control*/
 	SentByte(0x80);	 //Control byte
	SentByte(0x80); /*128*/
	SentByte(0x80);	 //Control byte
	SentByte(0x82); /*IREF */
	SentByte(0x80);	 //Control byte
	SentByte(0x00); /* */
	SentByte(0x80);	 //Control byte
	SentByte(0x23);
	SentByte(0x80);	 //Control byte
	SentByte(0x01); /* */
	SentByte(0x80);	 //Control byte
	SentByte(0xA0); /*set segment remap*/
	SentByte(0x80);	 //Control byte
	SentByte(0xA2);
	SentByte(0x80);	 //Control byte
	SentByte(0xA4);
	SentByte(0x80);	 //Control byte
	SentByte(0xA6); /*normal / reverse*/
	SentByte(0x80);	 //Control byte
	SentByte(0xA8); /*multiplex ratio*/
	SentByte(0x80);	 //Control byte
	SentByte(0x2F); /*duty = 1/48*/
	SentByte(0x80);	 //Control byte
	SentByte(0xC0); /*Com scan direction*/
	SentByte(0x80);	 //Control byte
	SentByte(0xD3); /*set display offset*/
	SentByte(0x80);	 //Control byte
	SentByte(0x38);
 	SentByte(0x80);	 //Control byte
	SentByte(0xD5); /*set osc division*/
	SentByte(0x80);	 //Control byte
	SentByte(0x50);
	SentByte(0x80);	 //Control byte
	SentByte(0xD9); /*set pre-charge period*/
	SentByte(0x80);	 //Control byte
	SentByte(0x22);
	SentByte(0x80);	 //Control byte
	SentByte(0xdb); /*set vcomh*/
	SentByte(0x80);	 //Control byte
	SentByte(0x35);
	SentByte(0x80);	 //Control byte
	SentByte(0xAd); /*set charge pump enable*/
	SentByte(0x80);	 //Control byte
	SentByte(0x8B);
	SentByte(0x80);	 //Control byte
	SentByte(0x33); /*9v*/
	SentByte(0x80);	 //Control byte
	SentByte(0xaf);//--turn on oled panel

 	Stop();
}

void Clean(void)
{
    unsigned char i,j;
    for(i=0;i<0x06;i++)
	{
		Set_Page_Address(i);
        Set_Column_Address(0x00);
		Start();
		SentByte(Write_Address);
		SentByte(0x40);
		for(j=0;j<88;j++)
		{
		        SentByte(0x00);
		}
		Stop();
	}
    return;
}


void Display_Chess(unsigned char value)
{
    unsigned char i,j,k;
    for(i=0;i<0x06;i++)
	{
		Set_Page_Address(i);
        Set_Column_Address(0x00);
		Start();
		SentByte(Write_Address);
		SentByte(0x40);
		for(j=0;j<11;j++)
		{
		    for(k=0;k<0x04;k++)
		        SentByte(value);
		    for(k=0;k<0x04;k++)
		        SentByte(~value);
		}
		Stop();
	}
    return;
}


void Display_Chinese(unsigned char ft[])
{
    unsigned char i,j,k,b,c=0;
	unsigned int	num=0;

for(b=0;b<3;b++)
  {
    for(i=0;i<0x02;i++)
	{	Set_Page_Address(c);
    	Set_Column_Address(0x04);
	    num=i*0x10+b*128;
		Start();
		SentByte(Write_Address);
		SentByte(0x40);
		for(j=0;j<0x05;j++)
		{
            for(k=0;k<0x10;k++)
			{
		        SentByte(ft[num+k]);
			}
			num+=0x20;
		}c++;
		Stop();
	}
  }
    return;
}


//Display_Chinese1
void Display_Chinese_Column(unsigned char ft[])
{
    unsigned char i,j,k,num=0x40;
    for(i=0;i<0x06;i++)
	{
		Set_Page_Address(i);
        Set_Column_Address(0x04);
		Start();
		SentByte(Write_Address);
		SentByte(0x40);
		for(j=0;j<0x05;j++)
		{
            for(k=0;k<0x10;k++)
			{
		        SentByte(ft[num+k]);
			}
		}
		Stop();
	num+=0x10;
	}
    return;
}


void Display_Picture(unsigned char pic[])
{
    unsigned char i,j,num=0;
	for(i=0;i<0x06;i++)
	{
	Set_Page_Address(i);
    Set_Column_Address(0x00);
		Start();
		SentByte(Write_Address);
		SentByte(0x40);
        for(j=0;j<88;j++)
		{
		    SentByte(pic[i*88+j]);
		}
		Stop();
	}
    return;
}



void main(void)
{	IE=0x81;
	IP=0x01;
	TCON=0x01;
	int0=1;
	Delay(100);

    Initial();

	while(1)
	{
        Display_Picture(pic);
		Delay(65000);
	
		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa7);//--set Inverse Display	
		SentByte(0x00);
		Stop();
		Delay(65000);

		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa6);//--set normal display
		SentByte(0x00);
		Stop();
		Display_Picture(pic1);
		Delay(65000);

		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa7);//--set Inverse Display	
		SentByte(0x00);
		Stop();
		Delay(65000);

		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa6);//--set normal display
		SentByte(0x00);
		Stop();
		Display_Picture(pic2);
		Delay(65000);


		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa7);//--set Inverse Display	
		SentByte(0x00);
		Stop();
		Delay(65000);


		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa6);//--set normal display
		SentByte(0x00);
		Stop();
		Display_Picture(pic3);
		Delay(65000);

		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa7);//--set Inverse Display	
		SentByte(0x00);
		Stop();
		Delay(65000);

		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa6);//--set normal display
		SentByte(0x00);
		Stop();
		Display_Picture(pic4);
		Delay(65000);

		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa7);//--set Inverse Display	
		SentByte(0x00);
		Stop();
		Delay(65000);

	


		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa6);//--set normal display
		SentByte(0x00);
		Stop();

		Display_Chess(0x0f);
		Delay(65000);


		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa7);//--set Inverse Display	
		SentByte(0x00);
		Stop();
		Delay(65000);


		Clean();

		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa6);//--set normal display
		SentByte(0x00);
		Stop();
		Display_Chinese(font);
		Delay(65000);


		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa7);//--set Inverse Display	
		SentByte(0x00);
		Stop();	
		Display_Chinese(font);
		Delay(65000);


		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa6);//--set normal display
		SentByte(0x00);
		Stop();
		Display_Chinese_Column(font);
		Delay(65000);


		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa7);//--set Inverse Display	
		SentByte(0x00);
		Stop();	
		Display_Chinese_Column(font);
		Delay(65000);


		Start();
		SentByte(Write_Address);
		SentByte(0x80);
		SentByte(0xa6);//--set normal display
		SentByte(0x00);
		Stop();
	}
}